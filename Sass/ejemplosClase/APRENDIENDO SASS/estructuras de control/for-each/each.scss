//each con listas
// Definición de una lista
$colores: red, green, blue;

// Uso de @each para aplicar estilos a cada color en la lista
@each $color in $colores {
  .color-#{$color} {
    background-color: $color;
  }
}


//each con mapas
// Definición de un mapa
$temas: (
  primario: #3498db,
  secundario: #e74c3c,
  resaltado: #2ecc71
);

// Uso de @each para aplicar estilos a cada par clave-valor en el mapa
@each $nombre, $color in $temas {
  .#{$nombre}-tema {
    background-color: $color;
  }
}


//each con listas anidadas
// Definición de una lista anidada
$grids: (3 3 3, 4 4 4 4, 2 6 4);

// Uso de @each para aplicar estilos a cada valor en la lista anidada
@each $columnas in $grids {
  .grid {
    @each $col in $columnas {
      width: percentage($col / sum($columnas));
      float: left;
    }
  }
}


//each con Rangos
// Uso de @each con un rango numérico
@each $i in 1 through 5 {
    .item-#{$i} {
      font-size: 10px + $i * 2;
    }
  }

  
  //filtrado con each
  
  $colores: red, green, blue, yellow;

  @each $color in $colores {
    @if $color != red {
      .color-#{$color} {
        background-color: $color;
      }
    }
  }
  

  //each anidado
  $temas: (
  primario: (background: #3498db, color: #fff),
  secundario: (background: #e74c3c, color: #fff)
);

@each $nombre, $estilos in $temas {
  .#{$nombre}-tema {
    @each $propiedad, $valor in $estilos {
      #{$propiedad}: $valor;
    }
  }
}


//each con rangos de caracteres
@each $letra in A through Z {
    .letra-#{$letra} {
      content: $letra;
    }
  }

  
  //iterar sobre listas y mapas simultaneamente
  $colores: red, green, blue;
$tamaños: (red: 10px, green: 20px, blue: 30px);

@each $color in $colores {
  .element-#{$color} {
    background-color: $color;
    width: map-get($tamaños, $color);
  }
}
